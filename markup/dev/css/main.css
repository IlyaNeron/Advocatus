/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon/icomoon.eot?8dxkht");
  src: url("../fonts/icomoon/icomoon.eot?8dxkht#iefix") format("embedded-opentype"), url("../fonts/icomoon/icomoon.ttf?8dxkht") format("truetype"), url("../fonts/icomoon/icomoon.woff?8dxkht") format("woff"), url("../fonts/icomoon/icomoon.svg?8dxkht#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-deal:before {
  content: "\e900"; }

.icon-wrench:before {
  content: "\e901"; }

.icon-computer:before {
  content: "\e902"; }

.icon-home:before {
  content: "\e903"; }

.icon-left-quote:before {
  content: "\e904"; }

.icon-comment:before {
  content: "\e905"; }

.icon-next:before {
  content: "\e906"; }

.icon-facebook:before {
  content: "\e907"; }

.icon-twitter:before {
  content: "\e908"; }

.icon-instagram:before {
  content: "\e909"; }

.icon-google:before {
  content: "\e90a"; }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  height: 100%; }

*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

* {
  max-height: 1000000px; }

body {
  font: 400 14px/2 "Open Sans", "Playfair Display", "Helvetica Neue", "Helvetica", sans-serif;
  background: #fff;
  min-width: 320px;
  color: #666; }

img {
  max-width: 100%;
  height: auto; }

strong,
b {
  font-weight: 700; }

.btn {
  -webkit-transition: color 0.3s ease-in-out, background 0.3s ease-in-out, border 0.3s ease-in-out;
  -o-transition: color 0.3s ease-in-out, background 0.3s ease-in-out, border 0.3s ease-in-out;
  transition: color 0.3s ease-in-out, background 0.3s ease-in-out, border 0.3s ease-in-out;
  -webkit-border-radius: 25px;
          border-radius: 25px;
  padding: 15px;
  font-size: 16px;
  font-weight: 400;
  line-height: 1;
  border: 1px solid transparent;
  min-width: 180px;
  font-family: "Playfair Display", "Arial", "Helvetica Neue", "Helvetica", serif;
  cursor: pointer;
  outline: none;
  display: inline-block;
  vertical-align: top; }
  .btn-primary {
    color: #111;
    background-color: #e8bf5d; }
    .btn-primary:hover {
      background: #fff;
      color: #e8bf5d;
      border: 1px solid #e8bf5d; }

@media (max-width: 1023px) {
  .btn-primary {
    padding: 15px; } }

@media (max-width: 767px) {
  .btn-primary {
    min-width: 100%; } }

.nav-menu, .history-content ul, .carousel-buttons, .soc-icons, .tabs-items {
  margin: 0;
  padding: 0;
  list-style: none; }

.clearfix:after, .article .item-bottom:after, .container:after {
  content: '';
  display: block;
  clear: both; }

form,
fieldset {
  margin: 0;
  padding: 0;
  border-style: none; }

input[type="text"],
input[type="tel"],
input[type="email"],
input[type="search"],
input[type="password"],
input[type="number"],
textarea {
  width: 100%;
  height: 40px;
  -webkit-transition: border-color 0.3s ease-in-out;
  -o-transition: border-color 0.3s ease-in-out;
  transition: border-color 0.3s ease-in-out;
  font-size: 14px;
  font-weight: 400;
  line-height: 1;
  font-family: "Open Sans", "Playfair Display", "Helvetica Neue", "Helvetica", sans-serif;
  padding: 10px 0;
  font-style: italic;
  border: 1px solid #b9b9b9;
  -webkit-border-radius: 0;
          border-radius: 0;
  display: block;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  outline: none;
  -webkit-appearance: none;
  border-width: 0 0 1px; }
  input[type="text"]::-webkit-input-placeholder,
  input[type="tel"]::-webkit-input-placeholder,
  input[type="email"]::-webkit-input-placeholder,
  input[type="search"]::-webkit-input-placeholder,
  input[type="password"]::-webkit-input-placeholder,
  input[type="number"]::-webkit-input-placeholder,
  textarea::-webkit-input-placeholder {
    color: #b9b9b9;
    -webkit-transition: color 0.3s ease-in-out;
    -o-transition: color 0.3s ease-in-out;
    transition: color 0.3s ease-in-out; }
  input[type="text"]::-moz-placeholder,
  input[type="tel"]::-moz-placeholder,
  input[type="email"]::-moz-placeholder,
  input[type="search"]::-moz-placeholder,
  input[type="password"]::-moz-placeholder,
  input[type="number"]::-moz-placeholder,
  textarea::-moz-placeholder {
    opacity: 1;
    color: #b9b9b9;
    -webkit-transition: color 0.3s ease-in-out;
    -o-transition: color 0.3s ease-in-out;
    transition: color 0.3s ease-in-out; }
  input[type="text"]:-moz-placeholder,
  input[type="tel"]:-moz-placeholder,
  input[type="email"]:-moz-placeholder,
  input[type="search"]:-moz-placeholder,
  input[type="password"]:-moz-placeholder,
  input[type="number"]:-moz-placeholder,
  textarea:-moz-placeholder {
    color: #b9b9b9;
    -webkit-transition: color 0.3s ease-in-out;
    -o-transition: color 0.3s ease-in-out;
    transition: color 0.3s ease-in-out; }
  input[type="text"]:-ms-input-placeholder,
  input[type="tel"]:-ms-input-placeholder,
  input[type="email"]:-ms-input-placeholder,
  input[type="search"]:-ms-input-placeholder,
  input[type="password"]:-ms-input-placeholder,
  input[type="number"]:-ms-input-placeholder,
  textarea:-ms-input-placeholder {
    color: #b9b9b9;
    -webkit-transition: color 0.3s ease-in-out;
    -o-transition: color 0.3s ease-in-out;
    transition: color 0.3s ease-in-out; }
  input[type="text"].placeholder,
  input[type="tel"].placeholder,
  input[type="email"].placeholder,
  input[type="search"].placeholder,
  input[type="password"].placeholder,
  input[type="number"].placeholder,
  textarea.placeholder {
    color: #b9b9b9;
    -webkit-transition: color 0.3s ease-in-out;
    -o-transition: color 0.3s ease-in-out;
    transition: color 0.3s ease-in-out; }
  @media (max-width: 1023px) {
    input[type="text"],
    input[type="tel"],
    input[type="email"],
    input[type="search"],
    input[type="password"],
    input[type="number"],
    textarea {
      font-size: 16px; } }
  @media (max-width: 767px) {
    input[type="text"],
    input[type="tel"],
    input[type="email"],
    input[type="search"],
    input[type="password"],
    input[type="number"],
    textarea {
      border-bottom-width: 1px; } }
  input[type="text"]:focus,
  input[type="tel"]:focus,
  input[type="email"]:focus,
  input[type="search"]:focus,
  input[type="password"]:focus,
  input[type="number"]:focus,
  textarea:focus {
    border-color: #e8bf5d; }
    input[type="text"]:focus::-webkit-input-placeholder,
    input[type="tel"]:focus::-webkit-input-placeholder,
    input[type="email"]:focus::-webkit-input-placeholder,
    input[type="search"]:focus::-webkit-input-placeholder,
    input[type="password"]:focus::-webkit-input-placeholder,
    input[type="number"]:focus::-webkit-input-placeholder,
    textarea:focus::-webkit-input-placeholder {
      color: #e8bf5d; }
    input[type="text"]:focus::-moz-placeholder,
    input[type="tel"]:focus::-moz-placeholder,
    input[type="email"]:focus::-moz-placeholder,
    input[type="search"]:focus::-moz-placeholder,
    input[type="password"]:focus::-moz-placeholder,
    input[type="number"]:focus::-moz-placeholder,
    textarea:focus::-moz-placeholder {
      opacity: 1;
      color: #e8bf5d; }
    input[type="text"]:focus:-moz-placeholder,
    input[type="tel"]:focus:-moz-placeholder,
    input[type="email"]:focus:-moz-placeholder,
    input[type="search"]:focus:-moz-placeholder,
    input[type="password"]:focus:-moz-placeholder,
    input[type="number"]:focus:-moz-placeholder,
    textarea:focus:-moz-placeholder {
      color: #e8bf5d; }
    input[type="text"]:focus:-ms-input-placeholder,
    input[type="tel"]:focus:-ms-input-placeholder,
    input[type="email"]:focus:-ms-input-placeholder,
    input[type="search"]:focus:-ms-input-placeholder,
    input[type="password"]:focus:-ms-input-placeholder,
    input[type="number"]:focus:-ms-input-placeholder,
    textarea:focus:-ms-input-placeholder {
      color: #e8bf5d; }
    input[type="text"]:focus.placeholder,
    input[type="tel"]:focus.placeholder,
    input[type="email"]:focus.placeholder,
    input[type="search"]:focus.placeholder,
    input[type="password"]:focus.placeholder,
    input[type="number"]:focus.placeholder,
    textarea:focus.placeholder {
      color: #e8bf5d; }

select {
  -webkit-border-radius: 0; }

textarea {
  width: 100%;
  height: 100px !important;
  resize: none;
  vertical-align: top; }

button,
input[type="button"],
input[type="reset"],
input[type="file"],
input[type="submit"] {
  cursor: pointer;
  -webkit-border-radius: 5px;
          border-radius: 5px;
  -webkit-appearance: none; }

h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6, .h {
  font-family: "Playfair Display", "Arial", "Helvetica Neue", "Helvetica", serif;
  line-height: 1;
  color: #111;
  margin: 0 0 30px;
  font-weight: 400; }
  h1:last-child, .h1:last-child, h2:last-child, .h2:last-child, h3:last-child, .h3:last-child, h4:last-child, .h4:last-child, h5:last-child, .h5:last-child, h6:last-child, .h6:last-child, .h:last-child {
    margin: 0; }

h1, .h1 {
  font-size: 65px;
  color: #fff;
  margin: 0 0 15px;
  letter-spacing: 5px; }

h2, .h2 {
  font-size: 34px;
  color: #111;
  margin: 0 0 25px; }

h3, .h3 {
  font-size: 21px; }

h4, .h4 {
  font-size: 22px; }

h5, .h5 {
  font-size: 18px; }

h6, .h6 {
  font-size: 14px; }

a {
  -webkit-transition: color 0.3s linear;
  -o-transition: color 0.3s linear;
  transition: color 0.3s linear;
  font-weight: 400;
  color: #111;
  text-decoration: none;
  outline: none; }
  a:hover, a:focus {
    color: #e8bf5d; }

p {
  margin: 0 0 30px; }
  p:last-child {
    margin: 0; }

blockquote {
  margin: 0;
  padding: 0 40px;
  color: #fff;
  line-height: 2.5;
  quotes: none;
  position: relative; }
  blockquote i {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    font-size: 30px;
    opacity: 0.25; }
  blockquote q {
    display: block;
    margin-bottom: 20px; }
  blockquote cite {
    font-family: "Playfair Display", "Arial", "Helvetica Neue", "Helvetica", serif;
    color: #fff;
    display: block;
    font-size: 21px;
    font-style: normal;
    line-height: 1; }
    blockquote cite:not(:last-child) {
      padding-bottom: 10px; }

.logo {
  float: left; }
  .logo a {
    display: block; }
    .logo a img {
      display: block; }

@media (max-width: 1023px) {
  .logo {
    padding-top: 5px; } }

.nav {
  float: right; }
  .nav-opener {
    display: none; }
  .nav-menu {
    line-height: 0;
    font-size: 0;
    letter-spacing: 0; }
    .nav-menu li {
      line-height: 1;
      font-size: 15px;
      letter-spacing: normal;
      display: inline-block;
      text-transform: uppercase; }
      .nav-menu li:not(:last-child) {
        padding-right: 20px; }
      .nav-menu li a {
        display: block;
        padding: 0 10px 0;
        position: relative; }
        .nav-menu li a:after {
          content: '';
          position: absolute;
          height: 5px;
          left: 0;
          right: 0;
          background: #e8bf5d;
          top: 200%;
          opacity: 0;
          visibility: hidden;
          -webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
          -o-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
          transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out; }
        .nav-menu li a:hover:after {
          opacity: 1;
          visibility: visible; }
        .nav-menu li a:hover, .nav-menu li a:focus {
          color: initial; }
      .nav-menu li.active-link a:after {
        content: '';
        position: absolute;
        height: 5px;
        left: 0;
        right: 0;
        background: #e8bf5d;
        top: 200%;
        opacity: 1;
        visibility: visible; }

@media (max-width: 1023px) {
  .nav-opener {
    width: 30px;
    height: 25px;
    position: relative;
    display: block; }
    .nav-opener:after, .nav-opener:before, .nav-opener span {
      content: '';
      position: absolute;
      width: 100%;
      height: 2px;
      background: #111;
      -webkit-transition: -webkit-transform 0.3s ease-in-out;
      transition: -webkit-transform 0.3s ease-in-out;
      -o-transition: transform 0.3s ease-in-out;
      transition: transform 0.3s ease-in-out;
      transition: transform 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out; }
    .nav-opener:after {
      top: 0; }
    .nav-opener:before {
      bottom: 0; }
    .nav-opener span {
      top: 50%;
      -webkit-transform: translateY(-50%);
          -ms-transform: translateY(-50%);
              transform: translateY(-50%);
      -webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      -o-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out; }
    .nav-active .nav-opener {
      z-index: 2; }
      .nav-active .nav-opener:after, .nav-active .nav-opener:before {
        content: '';
        -webkit-transform: rotate(-45deg);
            -ms-transform: rotate(-45deg);
                transform: rotate(-45deg);
        top: 50%;
        -webkit-transition: -webkit-transform 0.3s ease-in-out;
        transition: -webkit-transform 0.3s ease-in-out;
        -o-transition: transform 0.3s ease-in-out;
        transition: transform 0.3s ease-in-out;
        transition: transform 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out; }
      .nav-active .nav-opener:before {
        -webkit-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
                transform: rotate(45deg); }
      .nav-active .nav-opener span {
        opacity: 0;
        visibility: hidden;
        -webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
        -o-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
        transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out; }
        .nav-active .nav-opener span:after {
          opacity: 0;
          visibility: hidden; }
  .nav-drop {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    -webkit-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
            transform: translateX(-100%);
    opacity: 0;
    visibility: hidden;
    background: #e8bf5d;
    text-align: center;
    -webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
    transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
    -o-transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
    overflow: auto;
    padding: 100px 15px 0; }
    .nav-active .nav-drop {
      opacity: 1;
      -webkit-transform: translateX(0);
          -ms-transform: translateX(0);
              transform: translateX(0);
      visibility: visible; }
    .resize-active .nav-drop {
      -webkit-transition: none;
      -o-transition: none;
      transition: none; }
  .nav-menu {
    display: inline-block; }
    .nav-menu li {
      display: block;
      font-size: 20px; }
      .nav-menu li:not(:last-child) {
        padding: 0 0 30px; }
      .nav-menu li.active-link a:after {
        -webkit-transition: background 0.3s ease-in-out;
        -o-transition: background 0.3s ease-in-out;
        transition: background 0.3s ease-in-out;
        background: #111;
        top: 150%; } }

.main-section {
  background-position: 50% 50%;
  -webkit-background-size: cover;
          background-size: cover;
  background-repeat: no-repeat;
  height: -webkit-calc(100vh - 109px);
  height: calc(100vh - 109px);
  position: relative; }
  .main-section:before {
    content: '';
    position: absolute;
    background-image: -webkit-gradient(linear, left bottom, left top, color-stop(25%, rgba(0, 0, 0, 0.6)), color-stop(80%, rgba(255, 255, 255, 0)));
    background-image: -webkit-linear-gradient(bottom, rgba(0, 0, 0, 0.6) 25%, rgba(255, 255, 255, 0) 80%);
    background-image: -o-linear-gradient(bottom, rgba(0, 0, 0, 0.6) 25%, rgba(255, 255, 255, 0) 80%);
    background-image: linear-gradient(to top, rgba(0, 0, 0, 0.6) 25%, rgba(255, 255, 255, 0) 80%);
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: 0.8; }

@media (max-width: 1023px) {
  .main-section {
    height: -webkit-calc(100vh - 85px);
    height: calc(100vh - 85px); } }

@media (max-width: 767px) {
  .main-section {
    height: -webkit-calc(100vh - 65px);
    height: calc(100vh - 65px); } }

.main-section-content {
  line-height: 0;
  font-size: 0;
  letter-spacing: 0;
  position: absolute;
  bottom: 110px;
  left: 0;
  right: 0;
  max-width: 980px;
  margin: 0 auto;
  padding: 0 15px; }
  .main-section-content .block-name {
    display: inline-block;
    vertical-align: middle;
    border-left: 2px solid #e8bf5d;
    padding: 0 15px;
    width: 81%; }
    .main-section-content .block-name h2 {
      color: #fff;
      font-family: "Open Sans", "Playfair Display", "Helvetica Neue", "Helvetica", sans-serif; }
  .main-section-content .btn-primary {
    vertical-align: middle; }

@media (max-width: 1023px) {
  .main-section-content .block-name {
    width: 75%; }
    .main-section-content .block-name h1 {
      font-size: 48px; }
    .main-section-content .block-name h2 {
      font-size: 24px; } }

@media (max-width: 767px) {
  .main-section-content {
    bottom: 15px; }
    .main-section-content .block-name {
      width: 100%;
      margin-bottom: 15px; }
      .main-section-content .block-name h1 {
        font-size: 32px; }
      .main-section-content .block-name h2 {
        font-size: 20px; } }

.head-block {
  max-width: 800px;
  font-family: "Playfair Display", "Arial", "Helvetica Neue", "Helvetica", serif;
  font-size: 20px;
  padding-left: 15px;
  border-left: 2px solid #e8bf5d;
  position: relative;
  z-index: 2;
  margin: 0 0 60px;
  line-height: 1.5; }
  .head-block .bg-item {
    font-size: 195px;
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    color: #111;
    line-height: 0.6;
    font-family: "Open Sans", "Playfair Display", "Helvetica Neue", "Helvetica", sans-serif;
    opacity: 0.1;
    z-index: -1;
    letter-spacing: -20px; }
  .head-block-second {
    color: #b9b9b9; }
    .head-block-second h2 {
      color: #fff; }
    .head-block-second .bg-item {
      color: #fff; }

@media (max-width: 1023px) {
  .head-block {
    font-size: 18px;
    margin: 0 0 40px; }
    .head-block h2 {
      margin: 0 0 20px; } }

@media (max-width: 767px) {
  .head-block {
    font-size: 16px;
    margin: 0 0 30px; }
    .head-block h2 {
      margin: 0 0 15px; } }

.section-about {
  padding: 90px 0 60px;
  position: relative; }

@media (max-width: 1023px) {
  .section-about {
    padding: 60px 0; } }

@media (max-width: 767px) {
  .section-about {
    padding: 30px 0; } }

.row {
  line-height: 0;
  font-size: 0;
  letter-spacing: 0;
  margin: 0 -15px; }
  .row .col {
    line-height: 1;
    font-size: 14px;
    letter-spacing: normal;
    display: inline-block;
    vertical-align: top;
    padding: 0 15px 30px;
    width: 100%; }
    .row .col-sm {
      width: 25%; }
    .row .col-md {
      width: 33.33333%; }
    .row .col-lg {
      width: 50%; }
    .row .col-xl {
      width: 66.66667%; }

@media (max-width: 1023px) {
  .row h3 {
    margin: 0 0 20px; } }

@media (max-width: 767px) {
  .row {
    margin: 0; }
    .row .col {
      padding: 0 0 20px; }
      .row .col-lg, .row .col-md, .row .col-sm, .row .col-xl {
        width: 100%; } }

.history-content ul {
  line-height: 0;
  font-size: 0;
  letter-spacing: 0; }

.history-content li {
  line-height: 1.5;
  font-size: 16px;
  letter-spacing: normal;
  position: relative;
  padding-left: 110px;
  color: #111; }
  .history-content li:not(:last-child) {
    margin-bottom: 30px; }
  .history-content li .item-year {
    font-size: 21px;
    font-weight: 700;
    position: absolute;
    left: 0;
    bottom: 0;
    color: #111; }

@media (max-width: 1023px) {
  .history-content li {
    padding-left: 80px; }
    .history-content li:not(:last-child) {
      margin-bottom: 30px; } }

@media (max-width: 1023px) {
  .history-content li {
    padding-left: 70px; }
    .history-content li:not(:last-child) {
      margin-bottom: 20px; } }

.row .expertise-content {
  line-height: 2.5; }

.section-area {
  padding: 95px 0 7px;
  position: relative;
  background: #111;
  z-index: 1; }

@media (max-width: 1023px) {
  .section-area {
    padding: 60px 0 20px; } }

@media (max-width: 767px) {
  .section-area {
    padding: 30px 0 0; } }

.area-content {
  max-width: 1020px;
  margin: 0 auto; }
  .area-content .col {
    color: #fff;
    line-height: 2;
    padding: 0 50px 70px; }
    .area-content .col .item-image {
      float: left;
      font-size: 45px;
      margin-right: 30px;
      color: #e8bf5d; }
      .area-content .col .item-image i {
        display: block; }
    .area-content .col .item-text {
      overflow: hidden; }
      .area-content .col .item-text h3 {
        color: #fff; }

@media (max-width: 1023px) {
  .area-content .col {
    padding: 0 15px 30px; } }

@media (max-width: 767px) {
  .area-content .col {
    padding: 0 0 30px; } }

.section-person {
  padding: 90px 0 75px;
  position: relative; }

@media (max-width: 1023px) {
  .section-person {
    padding: 60px 0 0; } }

@media (max-width: 767px) {
  .section-person {
    padding: 30px 0 0; } }

.person-items .person-image {
  display: block;
  margin: 0 0 30px; }
  .person-items .person-image img {
    width: 100%;
    display: block; }

.person-items h3 {
  margin: 0 0 10px; }

@media (max-width: 1023px) {
  .person-items .person-image {
    display: block;
    margin: 0 0 20px; } }

.section-quote {
  padding: 90px 0 108px;
  background-position: 50% 50%;
  -webkit-background-size: cover;
          background-size: cover;
  position: relative;
  background-color: #111;
  z-index: 1; }

@media (max-width: 1023px) {
  .section-quote {
    padding: 60px 0 30px; } }

@media (max-width: 767px) {
  .section-quote {
    padding: 30px 0 30px; } }

.carousel-buttons {
  line-height: 0;
  font-size: 0;
  letter-spacing: 0;
  width: 85%;
  text-align: center; }
  .carousel-buttons li {
    line-height: 1;
    font-size: 16px;
    letter-spacing: normal;
    display: inline-block; }
    .carousel-buttons li:not(:last-child) {
      padding-right: 5px; }
    .carousel-buttons li.active-button a {
      background: #fff;
      -webkit-transform: scale(1.3);
          -ms-transform: scale(1.3);
              transform: scale(1.3); }
  .carousel-buttons a {
    display: block;
    width: 10px;
    height: 10px;
    -webkit-border-radius: 50%;
            border-radius: 50%;
    border: 1px solid #fff;
    -webkit-transition: background 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
    transition: background 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
    -o-transition: transform 0.3s ease-in-out, background 0.3s ease-in-out;
    transition: transform 0.3s ease-in-out, background 0.3s ease-in-out;
    transition: transform 0.3s ease-in-out, background 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out; }
    .carousel-buttons a:hover {
      -webkit-transform: scale(1.3);
          -ms-transform: scale(1.3);
              transform: scale(1.3);
      background: #fff; }

.slide {
  padding: 0 0 25px; }
  .slide .image-block-wrapper {
    position: relative;
    -webkit-box-shadow: 20px 20px 0px 0px #e8bf5d;
            box-shadow: 20px 20px 0px 0px #e8bf5d; }
    .slide .image-block-wrapper img {
      position: relative;
      width: 100%;
      display: block; }
  .slide .quote-block {
    padding: 20px 44px 30px; }
    .slide .quote-block span {
      display: block;
      line-height: 1; }

@media (max-width: 767px) {
  .slide .quote-block {
    padding: 15px 0 20px; }
    .slide .quote-block blockquote {
      padding: 0 0 0 40px; }
      .slide .quote-block blockquote q {
        margin-bottom: 20px; }
  .slide .image-block-wrapper {
    -webkit-box-shadow: none;
            box-shadow: none; } }

.section-publications {
  padding: 90px 0 104px;
  position: relative; }

@media (max-width: 1023px) {
  .section-publications {
    padding: 60px 0 20px; } }

@media (max-width: 767px) {
  .section-publications {
    padding: 30px 0 0; } }

.article {
  line-height: 2;
  position: relative; }
  .article:after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 15px;
    right: 15px;
    border-bottom: 2px solid #e8bf5d; }
  .article-image {
    display: block;
    margin: 0 0 30px; }
    .article-image img {
      width: 100%;
      display: block; }
  .article .item-head {
    font-size: 16px;
    margin: 0 0 30px; }
    .article .item-head h3 {
      margin: 0 0 10px; }
      .article .item-head h3 a {
        display: inline-block; }
    .article .item-head .by {
      color: #111; }
      .article .item-head .by span {
        font-style: italic;
        color: #666; }
    .article .item-head .date-text {
      float: right; }
  .article .text {
    line-height: 2.3;
    margin: 0 0 24px; }
  .article .item-bottom {
    font-size: 16px;
    color: #111; }
    .article .item-bottom i {
      padding-right: 10px; }
    .article .item-bottom .comment {
      float: left; }
    .article .item-bottom .share {
      float: right; }

@media (max-width: 767px) {
  .article:after {
    content: none; }
  .article .item-head {
    margin: 0 0 20px; }
  .article .text {
    margin: 0 0 15px; } }

.section-tabs {
  background: #111;
  padding: 90px 0 140px;
  position: relative;
  z-index: 1; }

@media (max-width: 1023px) {
  .section-tabs {
    padding: 60px 0; } }

@media (max-width: 767px) {
  .section-tabs {
    padding: 30px 0; } }

.soc-icons {
  line-height: 0;
  font-size: 0;
  letter-spacing: 0;
  float: right; }
  .soc-icons li {
    line-height: 1;
    font-size: 16px;
    letter-spacing: normal;
    display: inline-block; }
    .soc-icons li:not(:last-child) {
      padding-right: 5px; }
  .soc-icons a {
    display: block;
    color: #fff;
    width: 35px;
    height: 35px;
    -webkit-transition: background 0.3s ease-in-out, color 0.3s ease-in-out, -webkit-border-radius 0.3s ease-in-out;
    transition: background 0.3s ease-in-out, color 0.3s ease-in-out, -webkit-border-radius 0.3s ease-in-out;
    -o-transition: border-radius 0.3s ease-in-out, background 0.3s ease-in-out, color 0.3s ease-in-out;
    transition: border-radius 0.3s ease-in-out, background 0.3s ease-in-out, color 0.3s ease-in-out;
    transition: border-radius 0.3s ease-in-out, background 0.3s ease-in-out, color 0.3s ease-in-out, -webkit-border-radius 0.3s ease-in-out;
    position: relative; }
    .soc-icons a:hover {
      -webkit-border-radius: 50%;
              border-radius: 50%;
      background: #e8bf5d;
      color: #111; }
  .soc-icons i {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); }

.tabs-items li {
  border-bottom: 1px solid #e8bf5d;
  position: relative; }
  .tabs-items li.active a {
    color: #e8bf5d; }
    .tabs-items li.active a:after, .tabs-items li.active a:before {
      background: #e8bf5d;
      -webkit-transition: background 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
      transition: background 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
      -o-transition: background 0.3s ease-in-out, transform 0.3s ease-in-out;
      transition: background 0.3s ease-in-out, transform 0.3s ease-in-out;
      transition: background 0.3s ease-in-out, transform 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out; }
    .tabs-items li.active a:after {
      -webkit-transform: translateY(-50%) rotate(-180deg);
          -ms-transform: translateY(-50%) rotate(-180deg);
              transform: translateY(-50%) rotate(-180deg); }
    .tabs-items li.active a:before {
      -webkit-transform: translateY(-50%) rotate(-180deg);
          -ms-transform: translateY(-50%) rotate(-180deg);
              transform: translateY(-50%) rotate(-180deg); }

.tabs-items a {
  color: #fff;
  display: block;
  padding: 16px 40px 15px 0;
  font-weight: 700; }
  .tabs-items a:hover {
    color: #e8bf5d; }
    .tabs-items a:hover:after, .tabs-items a:hover:before {
      background: #e8bf5d;
      -webkit-transition: background 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
      transition: background 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
      -o-transition: background 0.3s ease-in-out, transform 0.3s ease-in-out;
      transition: background 0.3s ease-in-out, transform 0.3s ease-in-out;
      transition: background 0.3s ease-in-out, transform 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out; }
  .tabs-items a:after, .tabs-items a:before {
    content: '';
    position: absolute;
    right: 15px;
    top: 50%;
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%);
    width: 11px;
    height: 3px;
    background: #fff; }
  .tabs-items a:before {
    -webkit-transform: translateY(-50%) rotate(-90deg);
        -ms-transform: translateY(-50%) rotate(-90deg);
            transform: translateY(-50%) rotate(-90deg); }

.tabs .tab-content {
  line-height: 2.5;
  font-size: 14px;
  letter-spacing: normal;
  width: 42%;
  vertical-align: top;
  display: inline-block;
  color: #111;
  background: #e8bf5d;
  padding: 35px 40px 70px;
  -webkit-border-radius: 3px;
          border-radius: 3px;
  margin: 0 15px 30px; }

.js-tab-hidden {
  display: block !important;
  left: -9999px !important;
  position: absolute !important;
  top: -9999px !important; }

@media (max-width: 1023px) {
  .tabs .tab-content {
    width: 45%; } }

@media (max-width: 767px) {
  .tabs .tab-content {
    width: 100%;
    margin: 0;
    padding: 15px 20px; } }

.section-form {
  padding: 90px 0 40px;
  position: relative; }

@media (max-width: 1023px) {
  .section-form {
    padding: 60px 0 30px; } }

@media (max-width: 767px) {
  .section-form {
    padding: 30px 0 15px; } }

.contact-block {
  max-width: 870px;
  -webkit-box-shadow: 0px 12px 40px 0px rgba(104, 86, 42, 0.1);
          box-shadow: 0px 12px 40px 0px rgba(104, 86, 42, 0.1);
  padding: 50px 35px;
  margin: 0 auto 30px;
  position: relative;
  background: #fff; }
  .contact-block .form {
    padding: 24px 15px 30px 0; }
  .contact-block .map-block {
    padding: 0 0 30px 45px; }

@media (max-width: 1023px) {
  .contact-block {
    padding: 30px 20px; } }

@media (max-width: 767px) {
  .contact-block {
    padding: 20px 15px;
    margin: 0 -15px; }
    .contact-block .form, .contact-block .map-block {
      padding: 0 0 30px; } }

.map-block iframe {
  width: 100%;
  height: 370px;
  position: relative;
  border: none; }

.map-block-wrapper {
  position: relative;
  -webkit-box-shadow: -23px 24px 0 0 #e8bf5d;
          box-shadow: -23px 24px 0 0 #e8bf5d; }

@media (max-width: 767px) {
  .map-block-wrapper {
    -webkit-box-shadow: none;
            box-shadow: none; } }

.form-row {
  padding: 0 0 30px; }

.section-line:after {
  content: '';
  background-repeat: repeat;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  width: 100%;
  max-width: 1200px;
  z-index: -1;
  margin: 0 15px; }

.section-line-white:after {
  background-image: url("../img/bg-section-3.png"); }

.section-line-dark:after {
  background-image: url("../img/bg-section-4.png"); }

@media (max-width: 767px) {
  .section-line:after {
    content: none; } }

.wrapper {
  position: relative;
  overflow: hidden; }

.header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  padding: 48px 0 31px;
  z-index: 2;
  background: #fff;
  -webkit-transition: padding 0.3s ease-in-out, -webkit-box-shadow 0.3s ease-in-out;
  transition: padding 0.3s ease-in-out, -webkit-box-shadow 0.3s ease-in-out;
  -o-transition: padding 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  transition: padding 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  transition: padding 0.3s ease-in-out, box-shadow 0.3s ease-in-out, -webkit-box-shadow 0.3s ease-in-out; }
  .header.fixed-position {
    -webkit-box-shadow: 0 0 20px 0px #111111;
            box-shadow: 0 0 20px 0px #111111;
    padding: 30px 0; }

@media (max-width: 1023px) {
  .header {
    padding: 30px 0; } }

@media (max-width: 767px) {
  .header {
    padding: 20px 0; } }

.main {
  position: relative;
  z-index: 1;
  padding-top: 110px; }

@media (max-width: 1023px) {
  .main {
    padding-top: 85px; } }

@media (max-width: 767px) {
  .main {
    padding-top: 65px; } }

.footer {
  background: #111;
  font-size: 16px;
  padding: 30px 0; }

.copyright {
  float: left;
  color: #b5b5b5; }
  .copyright i {
    padding-left: 5px; }
  .copyright a {
    color: #fff; }
    .copyright a:hover {
      color: #e8bf5d; }

@media (max-width: 1023px) {
  .footer {
    padding: 20px 0; } }

@media (max-width: 767px) {
  .footer {
    padding: 10px 0; } }

@media (max-width: 479px) {
  .footer {
    text-align: center; }
    .footer .copyright {
      float: none; }
    .footer .soc-icons {
      float: none; } }

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 15px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
